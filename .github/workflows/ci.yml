name: Main CI

on:
  push:
  workflow_dispatch:

jobs:
  test_authservice:
    runs-on: ubuntu-latest

    environment: authservice

    services:
      postgres:
        image: postgres:13

        env:
          POSTGRES_PASSWORD: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          - 5432:5432

    env:
      DB_URL: ${{ vars.DB_URL }}
      DB_URL_TEST: ${{ vars.DB_URL_TEST }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      RESET_PASSWORD_TOKEN_SECRET: ${{ secrets.RESET_PASSWORD_TOKEN_SECRET }}
      VERIFICATION_TOKEN_SECRET: ${{ secrets.VERIFICATION_TOKEN_SECRET }}

    steps:  
      - name: Check PostgreSQL connection
        run: |
          sudo apt-get install -y postgresql-client
          psql -h localhost -U postgres -c 'SELECT version();'
        env:
          PGPASSWORD: postgres

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11.2

      - name: Install dependencies  
        run: |
          python -m pip install --upgrade pip

      - name: Install Poetry
        run: |
          python -m pip install poetry

      - name: Install project
        working-directory: src/authservice
        run: |
          poetry install

      - name: Run migrations
        working-directory: src/authservice
        run: |
          poetry run alembic upgrade head

      - name: Run tests
        working-directory: src/authservice
        run: |
          poetry run pytest

      - name: Run pylint
        working-directory: src/authservice
        run: |
          poetry run pylint ./src

  # build_authservice:
  #   runs-on: ubuntu-latest

  #   needs: [test_authservice]

  #   environment: deployment

  #   steps:
  #     - name: Login to Docker
  #       run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
        
  #     - uses: actions/checkout@v4

  #     - name: Build Docker image
  #       working-directory: src/authservice
  #       run: docker build -t danyiimp/authservice:${GITHUB_REF_NAME} .

  #     - name: Push image to Docker
  #       run: docker push danyiimp/authservice:${GITHUB_REF_NAME}

        